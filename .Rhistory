install.packages(c("raster", "ggplot2"))
library(ggplot2)
library(raster)
install.packages(geobr)
install.packages("geobr")
library(geobr)
install.packages("geobr")
100:130
5 -
6-
7
3 % 5
#Matemática básica
2 * 3
4 - 1
6 / (4-1)
5 + 2
7 * 3
21 - 6
15 / 3
1:6
dado <- 1:6
dado
Name <- 1
name <- 0
my_number <- 999
Name <- my_number + name
ls()
dado - 1
dado + 2
dado/2
dado * 10
dado * dado
dado + 1:2
dado + 1:4
dado %*% dado
dado %o% dado
t(dado)
det(dado)
matriz <- dado%o%dado
t(matriz)
det(matriz)
matriz <- dado%o%(6:12)
t(matriz)
det(matriz)
matriz <- dado%o%(6:11)
t(matriz)
det(matriz)
round(3.1415)
factorial(5)
mean(1:6)
mean(dado)
round(mean(dado))
sample(x=1:4, size=2)
sample(x= dado, size=1)
sample(x= dado, size=1)
sample(x= dado, size=1)
sample(x= dado, size=1)
sample(x= dado, size=1)
sample(x= dado, size=1)
sample(dado,1)
args(sample)
args(round)
round(x=3.1415, digits = 2)
sample(size=1, x= dado)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2)
sample(x= dado, size=2, replace=TRUE)
sample(x= dado, size=2, replace=TRUE)
sample(x= dado, size=2, replace=TRUE)
sample(x= dado, size=2, replace=TRUE)
sample(x= dado, size=2, replace=TRUE)
rodada_dado <- sample(dado, size= 2, replace=T)
rodada_dado
sum(rodada_dado)
my_function <- function(){}
roll <- function(){
dado <- 1:6
rodada_dado <- sample(x=dado, size=2, replace=TRUE)
sum(rodada_dado)
}
roll()
roll()
roll2() <- function(dado_jogador){
rodada_dado <- sample(dado_jogador, size=2, replace = TRUE)
sum(rodada_dado)
}
roll2 <- function(dado_jogador){
rodada_dado <- sample(dado_jogador, size=2, replace = TRUE)
sum(rodada_dado)
}
roll2(dado_jogador = 1:6)
roll2 <- function(dado_jogador=1:6){
rodada_dado <- sample(dado_jogador, size=2, replace = T)
sum(dado_jogador)
}
roll2 <- function(dado_jogador){
rodada_dado <- sample(dado_jogador, size=2, replace = TRUE)
sum(rodada_dado)
}
roll2(dado_jogador = 1:6)
roll2()
roll2 <- function(dado_jogador=1:6){
rodada_dado <- sample(dado_jogador, size=2, replace = T)
sum(dado_jogador)
}
roll2()
install.packages("ggplot2")
library(ggplot2)
install.packages("geobr")
x <- c(-1,-0.8,-0.6,-0.4,-0.2,0,0.2,0.4,0.6,0.8,1)
y <- x^3
qplot(x,y)
qplot(x, binwidth= 1)
x <- c(1,2,2,2,2,3,3)
qplot(x, binwidth= 1)
x <- c(1,2,2,2,2,3,3)
qplot(x, binwidth= 1)
x2 <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4)
qplot(x2, binwidth=1)
x3 <- c(0, 1, 1, 2, 2, 2, 3, 3, 4)
qplot(x3, binwidth=1)
replicate(3, 1+1)
replicate(10, roll())
rolls <- replicate(10000,  rol())
rolls <- replicate(10000,  roll())
qplot(rolls, binwidth=1)
roll <- function(){
dado <- 1:6
rodada_dado <- sample(dado,size=2, replace=TRUE,
prob = C(1/8,1/8,1/8,1/8,1/8,3/8))
sum(rodada_dado)
}
rolls <- replicate(10000, roll())
rolls <- replicate(10000, roll())
roll <- function(){
dado <- 1:6
rodada_dado <- sample(dado,size=2, replace=TRUE,
prob = C(1/8,1/8,1/8,1/8,1/8,3/8))
sum(rodada_dado)
}
rolls <- replicate(10000, roll())
roll <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE,
prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
}
qplot(rolls, binwidth = 1)
rolls <- replicate(10000, roll())
qplot(rolls, binwidth = 1)
roll <- function() {
dados <- 1:6
rodada <- sample(dados, size = 2, replace = TRUE,
prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(rodada)
}
rolls <- replicate(10000, roll())
qplot(rolls, binwidth = 1)
dado <- c(1,2,3,40,0.9,0.7)
typeof(dado)
inteiro <- c(-1L, -2L, -4L,1L, 2L)
typeof(inteiro)
inteiro_2 <- c(1,2,3,40)
inteiro_2 <- c(-1,-2,-3,-40)
typeof(inteiro_2)
texto <- c("Hello", "World")
typeof(texto)
typeof("Hello")
3>4
logico <- c(TRUE, FALSE, TRUE)
typeof(LOGICO)
typeof(logico)
complexo <- c(1+1i, 1+2i, 1+3i)
typeof(complexo)
raw(3)
raw(2)
raw(20)
typeof(raw(18))
hand <- c("as", "rei", "dama", "valete", "dez")
atributes(hand)
attributes(hand)
dado <- 1:6
names(dado)
names(dado) <- c("um","dois", "tres", "quatro","cinco","seis")
attributes(dado)
dado
dado -1
names(dado) <- c("one", "two", "tres", "four", "cinco", "meia-duzia")
dado
dim(dado) <- c(3,2)
dado
dim(dado) <- c(2,3)
dado
dim(dado) <- c(1,2,3)
dado
matriz <- matrix(dado, nrow=2)
matriz
matriz <- matrix(dado, nrow=2, byrow=TRUE)
matriz
matriz <- matrix(dado, nrow=2)
matriz
array <- array(c(11:14,21:24,31:34), dim = c(2,2,3))
array
hand1 <- c("as", "rei", "dama", "valete","dez", "espadas", "espadas", "espadas",
"espadas", "espadas")
matrix(hand1, nrow=5)
matrix(hand1, ncol=2)
dim(hand1) <- c(5,2
)
dim(hand1) <- c(5,2)
hand1 <-c("as", "espadas", "rei", "espadas", "dama", "espadas", "valete", "espadas",
"dez", "espadas")
matrix(hand1, ncol=2, byrow=TRUE)
matrix(hand1, nrow=5, byrow=TRUE)
dim(dado) <- c(2,3)
dim(dado) <- c(1,2,3)
typeof(dado)
dim(dado) <- c(2,3)
typeof(dado)
class(dado)
attributes(dado)
class("Hello")
class(4)
agora <- Sys.time()
agora
agora <- Sys.time()
agora
agora
agora
agora
typeof(agora)
class(agora)
genero <- factoc(c("male", "female","female", "male" ))
genero <- factoc(c("male", "female","female", "male"))
typeof(genero)
genero <- factoc(c("male", "female","female", "male"))
typeof(genero)
genero <- factor(c("male", "female","female", "male"))
typeof(genero)
attributes(genero)
attributes(genero)
# Usando o unclass é possivel como o R está armazenando o seu vetor
unclass(genero)
as.character(genero)
sum(c(T,T,F,F))
