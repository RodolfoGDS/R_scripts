ggplot(data=delays, mapping = aes(x=delay))+
geom_freqpoly(binwidth = 10)
library(tidyverse)
tidyverse_update()
library(ggplot2)
smaller <-  diamonds %>%
filter(carat < 3)
ggplot(data = smaller, mapping = aes(x=carat))+
geom_histogram(binwidth = 0.1)
ggplot(data=smaller,mapping = aes(x= carat, colour = cut))+
geom_freqpoly(binwidth = 0.1)
ggplot(data=smaller, mapping = aes(x= carat))+
geom_histogram(binwidth = 0.01)
ggplot(data = faithful, mapping = aes(x =eruptions))+
geom_histogram(binwidth = 0.25)
ggplot(diamonds)+
geom_histogram(mapping = aes(x=y),binwidth =0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x=y),binwidth = 0.5)+
coord_cartesian(ylim=c(0,0.5))
ggplot(diamonds) +
geom_histogram(mapping = aes(x=y),binwidth = 0.5)+
coord_cartesian(ylim=c(0,50))
ggplot(diamonds) +
geom_histogram(mapping = aes(x=y),binwidth = 0.5)+
coord_cartesian(ylim=c(0,50))
unusual <- diamonds %>%
filter(y < 3 | y > 20) %>%
select(price, x, y,z) %>%
arrange(y)
unusual
diamonds2 <- diamonds %>%
filter(between(y,3,20)
diamonds2 <- diamonds %>%
mutate(y = ifelse(y < 3 | y > 20,NA,y))
install.packages(c(
"gapminder","ggforce","gh", "globals", "openintro", "profvis",
"RSQLite", "shiny", "shinycssloaders", "shinyFeedback",
"shinythemes", "testthat","thematic", "tidyverse", "vroom",
"waiter", "xml2","zeallot"
))
# conferindo a versão do shiny
packageVersion("shiny")
library(shiny)
# Defina a interface do usuário
ui <- fluidPage(
"hello, world!"
)
runApp('aplicativos_shiny/app')
runApp('aplicativos_shiny/app')
"shinyapp"
runApp('aplicativos_shiny/app/app_2/app_2.R')
runApp('aplicativos_shiny/app/app_2/app_2.R')
library(shiny); runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
library(dplyr)
municipios <- read_municipality()
View(municipios)
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
?selectizeInput
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
library(shiny); runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
bslib::bs_theme_preview(theme)
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
library(shiny); runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
sdcdfdf
wpg
wt
xc
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
library(shiny); runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
sales <- vroom::vroom("sales-dashboard/sales_data_sample.csv", col_types = list()), na ="")
sales <- vroom::vroom("sales-dashboard/sales_data_sample.csv", col_types = list(), na ="")
sales <- vroom::vroom("sales-dashboard/sales_data_sample.csv", col_types = list(), na ="")
sales <- vroom::vroom("sales-dashboard/sales_data_sample.csv", col_types = list(), na ="")
sales <- vroom::vroom("sales_data_sample.csv", col_types = list(), na ="")
View(sales)
runApp('sondagem_basegeo/web_sondagem.R')
runApp('daily.expenses/daily_expenses.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
sales <- vroom::vroom("sales_data_sample.csv", col_types = list(), na="")
sales %>%
select(TERRITORY, CUSTOMERNAME, ORDERNUMBER, everything()) %>%
arrange(ORDERNUMBER)
View(head(municipios))
View(head(estadoss))
View(head(estados))
View(head(estados))
estados <- read_state()
View(head(estados))
runApp('sondagem_basegeo/web_sondagem.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
#   actionButton("simulate", "Simulate")
# )
#
# server <-  function(input, output, session){
#   observeEvent(input$n,{
#     label <- paste0("Simulate ",  input$n, " times")
#     updateActionButton(inputId = "simulate", label = label)
#   })
#
# }
rm(sales)
library(shiny); runApp('aplicativos_shiny/ui_basica/ui_basica.R')
#   actionButton("simulate", "Simulate")
# )
#
# server <-  function(input, output, session){
#   observeEvent(input$n,{
#     label <- paste0("Simulate ",  input$n, " times")
#     updateActionButton(inputId = "simulate", label = label)
#   })
#
# }
library(tidyverse)
tidyverse_update()
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
runApp('sondagem_basegeo/web_sondagem.R')
library(shiny); runApp('sondagem_basegeo/web_sondagem.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
runApp('aplicativos_shiny/ui_basica/ui_basica.R')
library(googlesheets4)
library(tidyverse)
library(tibble)
## Autorizando o acesso ao google sheets
gs4_auth()
EntradaSalario <- read_sheet("https://docs.google.com/spreadsheets/d/1Qe6SBb3eSG3-LcdMQHU36XpPofNfxhNPYPN-0PBBrmQ/edit#gid=0")
View(EntradaSalario)
df1 <- data.frame(3555,"21-09-2022",2323,55444,"CDB")
sheet_append(EntradaSalario, df1)
saveData <- function(data){
data <- data %>% as.list() %>% data.frame()
sheet_append(SHEET_ID, data)
}
saveData <- function(data, SHEET_ID){
data <- data %>% as.list() %>% data.frame()
sheet_append(SHEET_ID, data)
}
saveData(df1,EntradaSalario )
EntradaSalario <- ("https://docs.google.com/spreadsheets/d/1Qe6SBb3eSG3-LcdMQHU36XpPofNfxhNPYPN-0PBBrmQ/edit#gid=0")
saveData(df1,EntradaSalario )
runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
receita <- data[1,2]
receita <- data[[1,2]]
receita <- entrada_investimento[1,2]
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
x = read_sheet(entrada_investimento)
library(googlesheets4)
x = googlesheets4::read_sheet(entrada_investimento)
gs4_auth()
x = googlesheets4::read_sheet(entrada_investimento)
library(shiny); runApp('daily.expenses/daily_expenses.R')
runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(googlesheets4)
gs4_auth()
entrada_investimento <- "https://docs.google.com/spreadsheets/d/1Qe6SBb3eSG3-LcdMQHU36XpPofNfxhNPYPN-0PBBrmQ/edit#gid=0"
df <- googlesheets4::read_sheet(entrada_investimento)
salario_mes <- aggregate(df$SALARIO,by=list(df$MES), FUN = sum)
View(salario_mes)
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
typeof(salrio_mes$Mes)
gs4_auth()
library(googlesheets4)
gs4_auth()
entrada_investimento <- "https://docs.google.com/spreadsheets/d/1Qe6SBb3eSG3-LcdMQHU36XpPofNfxhNPYPN-0PBBrmQ/edit#gid=0"
df <- googlesheets4::read_sheet(entrada_investimento)
salario_mes <- aggregate(df$SALARIO,by=list(df$MES), FUN = sum)
names(salario_mes) <- c("Mes", "Salario")
View(salario_mes)
typeof(salrio_mes$Mes)
typeof(salario_mes$Mes)
salario_mes$Mes <- as.Date(salario_mes$Mes)
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
View(df)
df <- data.frame(read_sheet(entrada_investimento))
df %>%
group_by(MES) %>%
summarise_at(vars(SALARIO),
list(name = sum))
library(dplyr)
df <- data.frame(read_sheet(entrada_investimento))
df %>%
group_by(MES) %>%
summarise_at(vars(SALARIO),
list(name = sum))
View(df)
rm(df)
df <- data.frame(read_sheet(entrada_investimento))
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(lubridate)
df <- data.frame(read_sheet(entrada_investimento))
df %>%
group_by(MES) %>%
summarise_at(vars(SALARIO),
list(name = sum))
df <- data.frame(read_sheet(entrada_investimento))
library(googlesheets4)
df <- data.frame(read_sheet(entrada_investimento))
df %>%
group_by(MES) %>%
summarise_at(vars(SALARIO),
list(name = sum))
View(df)
runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(googlesheets4)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(lubridate)
df2 <- data.frame(read_sheet(entrada_investimento))
acumulado_valor_investido <-  df2 %>%
group_by(MES, CLASSE_DE_INVESTIMENTO) %>%
summarise_at(vars(VALOR_INVESTIDO),
list(name = sum))
View(df2)
View(acumulado_valor_investido)
runApp('daily.expenses/daily_expenses.R')
library(googlesheets4)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(lubridate)
rm(df2)
df2 <- data.frame(read_sheet(entrada_investimento))
rm(acumulado_valor_investido)
acumulado_valor_investido <-  df2 %>%
group_by(MES, CLASSE_DE_INVESTIMENTO) %>%
summarise_at(vars(VALOR_INVESTIDO),
list(name = sum))
View(acumulado_valor_investido)
names(acumulado_valor_investido) <- c("Mes","CLASSE_DE_INVESTIMENTO", "VALOR_INVESTIDO")
output$investimento <- renderPlotly({
ggplot(acumulado_valor_investido,
aes(fill = CLASSE_DE_INVESTIMENTO, x=Mes, y = VALOR_INVESTIDO))+
geom_bar(position = "stack",stat = "identity")+
theme(legend.position = "none")+
labs(x = "Meses do ano", y="", title = "Distribuição dos investimentos por mês")
runApp('daily.expenses/daily_expenses.R')
runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(shiny); runApp('sondagem_basegeo/web_sondagem.R')
install.packages("shinysurveys")
list.files("C:/Users/rodolfo.paula/Documents/projetos_versionados/R_scripts/daily.expenses/.secrets/")
list.files("C:/Users/rodolfo.paula/Documents/projetos_versionados/R_scripts/daily.expenses/.secrets/")
install.packages
install.packages("auth0")
library(auth0)
use_auth0()
source("~/projetos_versionados/R_scripts/daily.expenses/daily_expenses.R", echo=TRUE)
source("~/projetos_versionados/R_scripts/daily.expenses/daily_expenses.R", echo=TRUE)
ui <-  fluidPage( theme = bslib::bs_theme(bootswatch = "solar"),
navbarPage(title= "Controle de gastos  --   Faça o acompanhamento diário de seus gastos" ),
tabsetPanel(
# Abertura de fluidPage e tabSetPanel
#############################################################################
#Inicio
tabPanel("Entrada e Investimentos",
fluidRow(
column(6,
numericInput("salario", label = "Digite valor de Entrada", min = 0, value=0),
dateInput("data", label = "Digite a data de recebimento", language = "pt", format = "dd-mm-yyyy" ),
actionButton("salvar_entrada", label = "Salavar dados de entrada", class = "btn btn sucess"),
selectInput("classeInvestimento", label ="Tipo de Investimento",
choices = c("Nenhum","CDBs", "Acoes","FIIs", "Renda Fixa", "LCI", "LCA")),
numericInput("valorInvestido", label = "Valor Investido no mes", value = 0 ),
dateInput("data_investimento", label = "Digite a data do investimento", language = "pt", format = "dd-mm-yyyy"),
actionButton("salvarinvestimento", label = "Salvar os dados de investimento", class = "btn btn sucess"),
plotlyOutput("RelacaoEntradaInvestimento")),
column(6,
plotlyOutput("Receita"),
plotlyOutput("investimento"))
)
),
#Fim
#######################################################
#Inicio
tabPanel("Gastos no Debito",
fluidRow(
column(3,
numericInput("gastoDebito", "Valor do Gasto", min = 0 , value = 0)),
column(3,
dateInput("data_gasto_debito", "Data", language = "pt", format = "dd-mm-yyyy")),
column(3,
selectInput("categoria_gastos_debito", "Categoria dos Gastos",
choices = c("Transporte", "Alimentacao", "Residencia","Cartao de Credito",
"Filhos", "Educacao", "Lazer") )),
column(3,
textInput("descricao_gasto_debito", "Descrição do Gasto"),
actionButton("salvar1", "Salvar Dados", class = "btn btn sucess"))
),
fluidRow(
column(6,
plotlyOutput("GastosDebito")),
column(6,
plotlyOutput("GastosDebitoCategoria"))
)
),
#Fim
#################################################################
tabPanel("Gastos no Crédito",
fluidRow(
column(3,
numericInput("gastoCredito", label = "Valor do Gasto", value = 0)),
column(3,
dateInput("data_gasto_credito", "Data do Gasto", language = "pt", format ="dd-mm-yyyy")),
column(3,
selectInput("categoria_gasto_credito", "Categoria dos Gastos",
choices = c("Transporte", "Alimentacão", "Residencia","Cartao de Credito",
"Filhos", "Educacao", "Lazer") )),
column(3,
textInput("descricao_gasto_credito", "Descrição do Gasto"),
actionButton("salvar2", "Salvar Dados", class = "btn btn sucess"))
),
fluidRow(
column(6,
plotlyOutput("GastosCredito")),
column(6,
plotlyOutput("GastosCreditoCategoria"))
)
),
####1#########################################################################
#Fechamento de fluidPage e tabSetPanel
logoutButton()
))
library(shiny); runApp('daily.expenses/daily_expenses.R')
source("~/projetos_versionados/R_scripts/daily.expenses/daily_expenses.R", echo=TRUE)
source("~/projetos_versionados/R_scripts/daily.expenses/daily_expenses.R", echo=TRUE)
use_auth0()
runApp('auth0_exemplo')
runApp('auth0_exemplo')
runApp('auth0_exemplo')
install.packages("auth0")
install.packages("auth0")
shiny::runApp('auth0_exemplo')
runApp('auth0_exemplo')
runApp('auth0_exemplo')
runApp()
runApp('auth0_exemplo')
runApp('auth0_exemplo')
runApp('auth0_exemplo')
gs4_auth()
library(googlesheets4)
library(auth0)
gs4_auth()
runApp('daily.expenses/daily_expenses.R')
install.packages('googledrive')
install.packages("googledrive")
library(shiny); runApp('daily.expenses/daily_expenses.R')
runApp('daily.expenses/daily_expenses.R')
install.packages("gargle")
install.packages("gargle")
library(shiny); runApp('daily.expenses/daily_expenses.R')
library(gargle)
runApp('daily.expenses/daily_expenses.R')
runApp('daily.expenses/daily_expenses.R')
runApp('daily.expenses/daily_expenses.R')
runApp('daily.expenses/daily_expenses.R')
runApp('daily_expenses.R')
runApp('daily.expenses/daily_expenses.R')
